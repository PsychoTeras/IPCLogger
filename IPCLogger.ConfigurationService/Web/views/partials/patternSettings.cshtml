@using IPCLogger.ConfigurationService.Entities.Models;
@using IPCLogger.ConfigurationService.CoreServices;
@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<DeclaredPatternModel>

<link href="../../css/views/manageSettings.css" rel="stylesheet">

<div id="pattern-settings" class="manage-settings">

    <input type="hidden" id="application-id" value="@ViewBag.applicationId" />
    <input type="hidden" id="pattern-id" value="@ViewBag.patternId" />
    <input type="hidden" id="is-new" value="@ViewBag.isNew" />

    <div class="card bg-light panel-container">

        <div class="card-container panel-container-left">

            <div class="card-header">Settings</div>
            <div class="card-body">
                @foreach (PropertyModel model in Model.CommonProperties)
                {
                    <div class="mt-2">
                        <div class="group-param-info">
                            <label>
                                @(ControlsService.GetPatternPropertyDisplayName(model))
                                @if (model.IsRequired)
                                {
                                    <a style="color: red; font-weight: bold"> * </a>
                                }
                            </label>
                            @{
                                string description = ControlsService.GetPatternPropertyDescription(model);
                                if (!string.IsNullOrEmpty(description))
                                {
                                    <img class="icon-info" data-toggle="tooltip" data-html="true" title="@description"
                                         src="assets/icon-info-16.png" />
                                }
                            }
                        </div>
                        @Html.Raw(ControlsService.ControlByPropertyModel(model))
                        <div class="invalid-feedback"></div>
                    </div>
                }
            </div>

            <hr />

            <div class="card-body">
                @foreach (PropertyModel model in Model.Properties)
                {
                    <div class="mt-2">
                        <div class="group-param-info">
                            <label>
                                @(ControlsService.GetPatternPropertyDisplayName(model))
                                @if (model.IsRequired)
                                {
                                    <a style="color: red; font-weight: bold"> * </a>
                                }
                            </label>
                            @{
                                string description = ControlsService.GetPatternPropertyDescription(model);
                                if (!string.IsNullOrEmpty(description))
                                {
                                    <img class="icon-info" data-toggle="tooltip" data-html="true" title="@description"
                                         src="assets/icon-info-16.png" />
                                }
                            }
                        </div>
                        @Html.Raw(ControlsService.ControlByPropertyModel(model))
                        <div class="invalid-feedback"></div>
                    </div>
                }
            </div>
        </div>

        <div class="panel-container-splitter"></div>

        <div class="div-patterns panel-container-right"></div>

    </div>

    <div class="div-save-cancel">
        <button id="btn-save" class="btn btn-sm btn-save">Save</button>
        <div class="btn-group">
            <button id="btn-cancel" class="btn btn-sm btn-secondary">Cancel</button>
            <button class="btn btn-secondary dropdown-toggle dropdown-toggle-split" data-toggle="dropdown"></button>
            <div class="dropdown-menu dropdown-menu-right">
                <a id="btn-reset" class="dropdown-item" style="cursor: pointer">Reset changes</a>
            </div>
        </div>
    </div>

</div>

<script src="../../js/views/patternSettings.js" type="text/javascript"></script>
<script src="../../js/controllers/patternSettingsController.js" type="text/javascript"></script>
<script src="../../js/controllers/applicationsController.js" type="text/javascript"></script>
<script src="../../js/controllers/popupController.js" type="text/javascript"></script>